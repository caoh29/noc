services:
  mongo:
    image: mongo
    restart: always
    ports:
      - ${MONGO_PORT}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ./mongodb:/data/db
    networks:
      - noc-network

  postgres:
    image: postgres
    restart: always
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    networks:
      - noc-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - ${APP_PORT}:3000
    depends_on:
      - mongo
      - postgres
    environment:
      MAILER_EMAIL: ${MAILER_EMAIL}
      MAILER_RECIPIENT: ${MAILER_RECIPIENT}
      MAILER_SECRET_KEY: ${MAILER_SECRET_KEY}
      MAILER_SERVICE: ${MAILER_SERVICE}
      MAILER_HOST: ${MAILER_HOST}
      MAILER_PORT: ${MAILER_PORT}
      CHECK_SERVICE_URL: ${CHECK_SERVICE_URL}
      CHECK_SERVICE_NAME: ${CHECK_SERVICE_NAME}
      POSTGRES_DB_NAME: ${POSTGRES_DB_NAME}
      POSTGRES_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB_NAME}?schema=public
      MONGO_DB_NAME: ${MONGO_DB_NAME}
      MONGO_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:${MONGO_PORT}/${MONGO_DB_NAME}
    networks:
      - noc-network

networks:
  noc-network:
    driver: bridge
